--source include/have_innodb.inc
--source include/not_windows.inc
--source include/not_embedded.inc

# Combinations
#
# upgrade: test upgrade on prepared databases from std_data.
# prepare: requires $OLD_BINDIR, test upgrade and downgrade with old-version
#          server. Also prepare std_data files during the run in the source
#          directory (you just have to commit or reject them).
#
# Examples
#
#   export OLD_BINDIR="/home/midenok/src/mariadb/10.3b/build"
#   mtr innodb_fts.versioning,orig_stopword,prepare
#

if ($MTR_COMBINATION_PREPARE)
{
  if (!$OLD_BINDIR)
  {
    --skip Requires OLD_BINDIR parameter (see test comment)
  }
}

--let $server_id= `select @@server_id`
--let $tmpdir= /tmp/mtr.$server_id.innodb_fts.data
--let $datadir= `select @@datadir`
--let $make_archive= 0
--let $extract_archive= 0
--let $tar_ext= tgz
# an option from tar --help|grep "filter the archive"
--let $tar_compression= z

if ($MTR_COMBINATION_PREPARE)
{
  if (!$MTR_COMBINATION_VERS_SW)
  {
    --let $make_archive= 1
  }
}
if ($MTR_COMBINATION_UPGRADE)
{
  --let $extract_archive= 1
}

--echo # Upgrade test 1
--let $archive= std_data/versioning/fts.01.$tar_ext

if ($MTR_COMBINATION_PREPARE)
{
  let $restart_bindir= $OLD_BINDIR;
  --source include/restart_mysqld.inc

  let $create_options= with system versioning;
  let $basic_stage= create_table;
  source basic.inc;
  let $basic_stage= insert_1;
  source basic.inc;
  --source vers_archive.inc
}

--source vers_extract.inc

#select @@global.innodb_file_per_table;
#--exit
--error ER_INDEX_CORRUPT
SELECT * FROM articles WHERE MATCH (title,body)
AGAINST ('Database' IN NATURAL LANGUAGE MODE);

call mtr.add_suppression("test/articles contains 3 indexes inside InnoDB");
alter table articles force;
flush tables;
show create table articles;

let $basic_stage= select_1;
source basic.inc;

--let $archive= std_data/versioning/fts.02.$tar_ext

if ($MTR_COMBINATION_PREPARE)
{
  --echo # Downgrade test 1
  let $restart_bindir= $OLD_BINDIR;
  --source include/restart_mysqld.inc

  alter table articles force;
  flush tables;
  show create table articles;
  let $basic_stage= select_1;
  source basic.inc;

  let $basic_stage= insert_2;
  --disable_query_log
  --source basic.inc
  --enable_query_log

  --source vers_archive.inc
}

--echo # Upgrade test 2

--source vers_extract.inc
--let $archive= std_data/versioning/fts.03.$tar_ext

alter table articles force;
let $basic_stage= select_2;
source basic.inc;

if ($MTR_COMBINATION_PREPARE)
{
  --echo # Downgrade test 2
  let $restart_bindir= $OLD_BINDIR;
  --source include/restart_mysqld.inc

  alter table articles force;
  let $basic_stage= select_2;
  source basic.inc;

  let $basic_stage= insert_3;
  --disable_query_log
  --source basic.inc
  --enable_query_log

  --source vers_archive.inc
}

--echo # Upgrade test 3

let $make_archive= 1;
let $sw_ext=;
if ($MTR_COMBINATION_VERS_SW)
{
  let $sw_ext=.vers_sw;
}

--source vers_extract.inc
--let $archive= std_data/versioning/fts.04$sw_ext.$tar_ext

alter table articles force;
let $basic_stage= select_3;
source basic.inc;

if ($MTR_COMBINATION_PREPARE)
{
  --echo # Downgrade test 3
  let $restart_bindir= $OLD_BINDIR;
  --source include/restart_mysqld.inc

  alter table articles force;
  let $basic_stage= select_3;
  source basic.inc;

  --disable_query_log
  drop table articles;
  let $stopword_stage= create_table;
  --source stopword.inc
  insert into articles (title, body)
  values ('test for stopwords','this is it...');
  insert into user_stopword values("the");
  delete from user_stopword;
  insert into user_stopword values("this");
  --enable_query_log

  --source vers_archive.inc
}

--echo # Upgrade test 4 (stopword)

--source vers_extract.inc

set global innodb_ft_server_stopword_table= "test/user_stopword";
let $stopword_stage= select_1;
--source stopword.inc
drop index idx on articles;
create fulltext index idx on articles(title, body);
--source stopword.inc

if ($MTR_COMBINATION_PREPARE)
{
  --echo # Downgrade test 4 (stopword)

  let $restart_bindir= $OLD_BINDIR;
  --source include/restart_mysqld.inc

  set global innodb_ft_server_stopword_table= "test/user_stopword";
  let $stopword_stage= select_1;
  # Downgrade faults with assertion "dict_index_get_n_unique(index) == 1"
  # until we rebuilt the index:
  drop index idx on articles;
  create fulltext index idx on articles(title, body);
  source stopword.inc;

  let $restart_bindir=;
  --source include/restart_mysqld.inc
}

--echo # Cleanup
drop table articles;
drop table user_stopword;

set global innodb_ft_server_stopword_table= default;
